{"mappings":"ACEA,IAAM,EAAS,SAAS,aAAa,CAAC,eAChC,EAAS,SAAS,aAAa,CAAC,eAChC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAY,SAAS,aAAa,CAAC,kBAOnC,EAAQ,SAAS,aAAa,CAAC,UACjC,EAAc,EAAM,IAAI,CAAC,MAAM,CAC/B,EAAiB,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CA8D/C,SAAS,IACP,EAAO,QAAQ,CAAG,AAtEH,KAsEG,EAClB,EAAO,QAAQ,CAAG,GArEH,EAsEf,EAAU,QAAQ,CAAG,AAvEH,KAuEG,EACrB,EAAU,QAAQ,CAAG,GAtEH,CAuEpB,CAjEA,EAAO,gBAAgB,CAAC,QAAS,WAC/B,AAeF,CAAA,WACE,GAAI,EA1BW,GA6Bb,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,EAAgB,IAClC,EAAO,UAAU,EAIrB,CAAA,IACA,GACF,CAAA,GAzBA,GAEA,EAAO,gBAAgB,CAAC,QAAS,WA0B3B,EArCW,GAsCb,EAAM,SAAS,CAAC,IAGlB,IACA,GA7BF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,AA6BF,CAAA,WAES,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAI,EA/Cc,GA+ClB,GAAA,CACE,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,E,C,M,E,CADX,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAKP,IACA,GACF,CAAA,GArCA,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,AAoCF,CAAA,WAES,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAI,EAxDc,EAwDlB,GAAA,CACE,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAKP,IACA,GACF,CAAA,GA5CA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar addRow = document.querySelector(\".append-row\");\nvar remRow = document.querySelector(\".remove-row\");\nvar addColumn = document.querySelector(\".append-column\");\nvar remColumn = document.querySelector(\".remove-column\");\nvar MAX_ROWS = 10;\nvar MAX_COLUMNS = 10;\nvar MIN_ROWS = 2;\nvar MIN_COLUMNS = 2;\nvar table = document.querySelector(\".field\");\nvar currentRows = table.rows.length;\nvar currentColumns = table.rows[0].cells.length;\naddRow.addEventListener(\"click\", function() {\n    addNewRow();\n});\nremRow.addEventListener(\"click\", function() {\n    remNewRow();\n});\naddColumn.addEventListener(\"click\", function() {\n    addNewColumns();\n});\nremColumn.addEventListener(\"click\", function() {\n    remNewColumns();\n});\nfunction addNewRow() {\n    if (currentRows < MAX_ROWS) {\n        var newRow = table.insertRow();\n        for(var i = 0; i < currentColumns; i++)newRow.insertCell();\n    }\n    currentRows++;\n    updateButtonColor();\n}\nfunction remNewRow() {\n    if (currentRows > MIN_ROWS) table.deleteRow(-1);\n    currentRows--;\n    updateButtonColor();\n}\nfunction addNewColumns() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    if (currentColumns < MAX_COLUMNS) try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.insertCell();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    currentColumns++;\n    updateButtonColor();\n}\nfunction remNewColumns() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    if (currentColumns > MIN_COLUMNS) try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.deleteCell(-1);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    currentColumns--;\n    updateButtonColor();\n}\nfunction updateButtonColor() {\n    addRow.disabled = currentRows === MAX_ROWS;\n    remRow.disabled = currentRows <= MIN_ROWS;\n    addColumn.disabled = currentColumns === MAX_COLUMNS;\n    remColumn.disabled = currentColumns <= MIN_COLUMNS;\n}\n\n//# sourceMappingURL=index.f4bbc033.js.map\n","'use strict';\n\nconst addRow = document.querySelector('.append-row');\nconst remRow = document.querySelector('.remove-row');\nconst addColumn = document.querySelector('.append-column');\nconst remColumn = document.querySelector('.remove-column');\n\nconst MAX_ROWS = 10;\nconst MAX_COLUMNS = 10;\nconst MIN_ROWS = 2;\nconst MIN_COLUMNS = 2;\n\nconst table = document.querySelector('.field');\nlet currentRows = table.rows.length;\nlet currentColumns = table.rows[0].cells.length;\n\naddRow.addEventListener('click', () => {\n  addNewRow();\n});\n\nremRow.addEventListener('click', () => {\n  remNewRow();\n});\n\naddColumn.addEventListener('click', () => {\n  addNewColumns();\n});\n\nremColumn.addEventListener('click', () => {\n  remNewColumns();\n});\n\nfunction addNewRow() {\n  if (currentRows < MAX_ROWS) {\n    const newRow = table.insertRow();\n\n    for (let i = 0; i < currentColumns; i++) {\n      newRow.insertCell();\n    }\n  }\n\n  currentRows++;\n  updateButtonColor();\n}\n\nfunction remNewRow() {\n  if (currentRows > MIN_ROWS) {\n    table.deleteRow(-1);\n  }\n\n  currentRows--;\n  updateButtonColor();\n}\n\nfunction addNewColumns() {\n  if (currentColumns < MAX_COLUMNS) {\n    for (const row of table.rows) {\n      row.insertCell();\n    }\n  }\n\n  currentColumns++;\n  updateButtonColor();\n}\n\nfunction remNewColumns() {\n  if (currentColumns > MIN_COLUMNS) {\n    for (const row of table.rows) {\n      row.deleteCell(-1);\n    }\n  }\n\n  currentColumns--;\n  updateButtonColor();\n}\n\nfunction updateButtonColor() {\n  addRow.disabled = currentRows === MAX_ROWS;\n  remRow.disabled = currentRows <= MIN_ROWS;\n  addColumn.disabled = currentColumns === MAX_COLUMNS;\n  remColumn.disabled = currentColumns <= MIN_COLUMNS;\n}\n"],"names":["addRow","document","querySelector","remRow","addColumn","remColumn","table","currentRows","rows","length","currentColumns","cells","updateButtonColor","disabled","addEventListener","addNewRow","newRow","insertRow","i","insertCell","deleteRow","addNewColumns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","remNewColumns","deleteCell"],"version":3,"file":"index.f4bbc033.js.map"}